#include <iostream>
using namespace std;
int dynamiczeroone(int wt[] , int val[], int n , int w){
    int t[n+1][w+1];
    for ( int i=0;i<=n;i++){
        for( int  j=0; j<=w ; j++){
            if(i==0||j==0){
                t[i][j]=0;
            }
        }
    }
    for ( int i=1;i<=n;i++){
        for( int  j=1; j<=w ; j++){
           if(wt[i-1]<=j){
                t[i][j]= max(val[i-1]+t[i-1][j-wt[i-1]], t[i-1][j]);
            }
            else{
                t[i][j] = t[i-1][j];
            }
        }
    }
     for ( int i=0;i<=n;i++){
        for( int j=0; j<=w ; j++){
         cout<<t[i][j]<<" ";
        }
        cout<<endl;
    }
    
    return t[n][w];
}
int main() {
    int n ; cin>> n;
    int  wt[n], val[n];
    for ( int i =0 ;i< n ;i++){
        cin>>wt[i];
    }
    for ( int i=0;i<n ;i++){
        cin>>val[i];
    }
    // for (int i : val){
    //     cout<<i;
    // }
    int w ;
    cin>> w;
    cout<<dynamiczeroone(wt,val, n , w);
    return 0;
    }
